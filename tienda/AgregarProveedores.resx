<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVFBUSV1WYLdAM0AUAAAAADwtPBE/NWV+QTVogkE1aIJBNWiCQTVogks8
        f79KPX7OQDVlg0E1aIJBNWiCQztRoGxcRfmag67/ZmBuvAAAAABAM2N3eXO0/5+kuP+fpbj/n6W4/5ib
        r/+bnqr/qa64/5ierf+gprb/i4+V/3mGTf95g0L/c19J/WBcXG8AAAAAQjZme5qW0v+3wMH/0dzc/9Hb
        2//M1dX/5PHy/97q6v/i7e7/u8fC/4KQWP+Mo0j/gJFL/01LV78AAAAAAAAAAEI2ZnubmNT/0Nna/9fi
        4//L1NX/3unq/+Tw8f/c6On/7fv8/3h9Z/+Pp0v/g5RO/4yNmv9JO3+XAAAAAAAAAABCNmZ7m5jU/9DZ
        2v/a5eX/1N/f/+bz9P/p9/j/0Nna/620rv/Fzcz/dnxk/6Wto/+srtb/STt/lwAAAAAAAAAAQjZme5uY
        1P/Q2dr/2uXl/9Tf3//S3d3/6vj5/9DZ2v+fpp3/mZ6T/+j09f/Q2dr/rK7W/0k7f5cAAAAAAAAAAEI2
        ZnubmNT/0Nna/9Xf4P/d6en/zdbW/+Xy8//Q2dr/7/3+/+/9/v/v/f7/0Nna/6yu1v9JO3+XAAAAAAAA
        AABCNmZ7m5jU/9DZ2v/S3d3/0drb/9Ld3f/m8/P/zNbX/9bg4f/g7O3/7vz9/9DZ2v+srtb/STt/lwAA
        AAAAAAAAPjFeYoWCt/zQ2dr/1+Lj/9DZ2v/f7Oz/4u3u/8TPz//N19f/ydLT/9Hc3f/Q2dr/m5vD/kY2
        cIQAAAAAAAAAAAAAAABbVlI7srm38tDZ2fjK09TyvsjH1aaqqHWanJxdvMTDz8vV0/DN19f4try8+HFx
        cVYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//0AAOAAAADAAQAAwAEAAMABAADAAQAAwAEAAMAB
        AADAAQAAwAEAAOGHAAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKSEhH1UAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMzMzBUU+P85hVHn5S0BN7zkyMkcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxKDdTOCxG0zkv
        UNU1KT2WAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADMzMwVIPi7OfGVR/pqD5/+Wfe//TUNS8jAg
        IBAAAAAAAAAAAAAAAAAyKTlROSxI3DsuUN07LlDdOy5Q3TsuUN07LlDdOy5Q3TsuUN07LlDdOy5Q3UY5
        duZiUcL/YE2y/1ZHqPE5Lk7eOy5Q3TsuUN07LlDdOy5Q3TsuUN07Lk/ePTcw9lBJMv+hdmH/kHJd/5R9
        2/9zX6j/LSMjUAAAAAAAAAAAAAAAADcsR81mV9//ZFuh/2deqf9nXqn/Z16p/2deqf9nXqn/Z16p/2de
        qf9nXqn/Y1iF/3FYXv95Zmn/bWN5/3BqpP9waqT/cGqk/3BqpP9waqT/bmmh/0pGR/+Gmkn/dYQ//1BK
        Mf+leWX/hGhU/0tASu8mJhoUAAAAAAAAAAAAAAAAOS5Mz2NUxv+JjIv/vcrM/77Mzv++zM7/vszO/77M
        zv++zM7/tsLE/56np/+lq6z/u8PE/+Px8v/P3d//oKmr/6+6vP++zM7/vszO/73KzP9iY1f/hJZH/3yO
        Q/+Urkz/bns8/1NMM/9QQjP1MigoMwAAAAAAAAAAAAAAAAAAAAA5LkzPY1XI/9Ha2/+Pk5L/oaen/6ux
        sv+ss7X/r7a3/7C3tv/AyMf/6PT1/+/9/v/v/f7/097e/+/9/v/q+fn/vcbG/7C4uf/R3d//ZWZa/4OX
        SP98jkP/lK5N/3OCPv+SrEz/RkU1/CskIEcAAAAAAAAAAAAAAAAAAAAAAAAAADkuTM9jVcj/1+Lj/7C3
        tv/v/f7/7/3+/+/9/v/v/f7/7/3+/9rl5f+0u7r/x9DQ/+/9/v/Bycn/7/3+/+/9/v/v/f7/7fr7/29x
        ZP+EmEj/eYpA/5exTv90gz7/kqxM/01MPP9BNmnqKSEhHwAAAAAAAAAAAAAAAAAAAAAAAAAAOS5Mz2NV
        yP/X4uP/sLe2/+/9/v/I0dH/rLOy/6yzsv+ssbH/xMvM/+36+//v/f7/7/3+/+Ty8//v/f7/7/3+/+/9
        /v9vcGj/fY9K/4uhSf+duVD/eIhA/5CpS/9aWkX/bWaa/0Y6eeYpISEfAAAAAAAAAAAAAAAAAAAAAAAA
        AAA5LkzPY1XI/9fi4/+wt7b/7/3+/+/9/v/v/f7/7/3+/+/9/v/v/f7/3+vs/8TNzv/v/f7/sLe2/+/9
        /v/v/f7/7Pr6/2JhV/9eXFL/lKxQ/3iIQf+Rq0z/WFlE/8zX1v93cLH/Rjp55ikhIR8AAAAAAAAAAAAA
        AAAAAAAAAAAAADkuTM9jVcj/1+Lj/7C3tv/v/f7/yNHR/7S7uv+6wsH/uMDA/9rl5f/j7/D/7fv8/+/9
        /v+wt7b/7/3+/+/9/v+yubf/oaej/9vm5/9UUUj/i6JN/1hYQ//Cy8r/7/3+/3dwsf9GOnnmKSEhHwAA
        AAAAAAAAAAAAAAAAAAAAAAAAOS5Mz2NVyP/X4uP/sLe2/+/9/v/v/f7/7/3+/+/9/v/v/f7/7/3+/+/9
        /v/g7O3/7/3+/7C3tv/v/f7/7/3+/1VSSv+utLP/0t3d/31+d/9NSUL/0dra/7C3tv/v/f7/d3Cx/0Y6
        eeYpISEfAAAAAAAAAAAAAAAAAAAAAAAAAAA5LkzPY1XI/9fi4/+wt7b/7/3+/+n19v/P2Nn/t76+/6yx
        sf+ttLP/sbi4/9jj5P/v/f7/sLe2/+/9/v/o9PX/Ni4q/0dCPP+DhXz/ztjY/+/9/v/v/f7/sLe2/+/9
        /v93cLH/Rjp55ikhIR8AAAAAAAAAAAAAAAAAAAAAAAAAADkuTM9jVcj/1+Lj/7C3tv/v/f7/z9jZ/83X
        1//l8vP/7/3+/+/9/v/v/f7/7/3+/+/9/v+wt7b/7/3+/+/9/v/R3N3/7fv8/+/9/v/v/f7/7/3+/+/9
        /v+wt7b/7/3+/3dwsf9GOnnmKSEhHwAAAAAAAAAAAAAAAAAAAAAAAAAAOS5Mz2NVyP/X4uP/sLe2/+/9
        /v/v/f7/7/3+/+/9/v/V3+D/qa6t/6Knpv/AyMj/7/3+/7C3tv/v/f7/7/3+/+/9/v/v/f7/7/3+/+/9
        /v/v/f7/7/3+/7C3tv/v/f7/d3Cx/0Y6eeYpISEfAAAAAAAAAAAAAAAAAAAAAAAAAAA5LkzPY1XI/9fi
        4/+wt7b/7/3+/8jR0f+ttLP/5PHy/97q6//u/P3/7/3+/+/9/v/v/f7/sLe2/+/9/v/v/f7/7/3+/+/9
        /v/v/f7/7/3+/+/9/v/v/f7/sLe2/+/9/v93cLH/Rjp55ikhIR8AAAAAAAAAAAAAAAAAAAAAAAAAADku
        TM9jVcj/1+Lj/7C3tv/v/f7/7/3+/+/9/v/v/f7/7vz9/83W1v+xuLj/ydLT/+/9/v+wt7b/3Ofo/7a9
        vP/R2tv/7/3+/+/9/v/v/f7/7/3+/+/9/v+wt7b/7/3+/3dwsf9GOnnmKSEhHwAAAAAAAAAAAAAAAAAA
        AAAAAAAAOS5Mz2NVyP/X4uP/sLe2/+/9/v/I0dH/rLOy/6yzsv+ssrL/0drb/+/9/v/v/f7/7/3+/7C3
        tv/v/f7/7/3+/+Pv8P/n8/T/rrW0/+37/P/v/f7/7/3+/7C3tv/v/f7/d3Cx/0Y6eeYpISEfAAAAAAAA
        AAAAAAAAAAAAAAAAAAA4LErQY1XI/9fi4/+wt7b/7/3+/+/9/v/v/f7/7/3+/+/9/v/v/f7/4e3u/8/Y
        2f/v/f7/sLe2/9vl5v+/x8j/6Pb3/+/9/v/v/f7/7/3+/+/9/v/v/f7/sLe2/+/9/v93cLH/Rjl25iwj
        Ix0AAAAAAAAAAAAAAAAAAAAAAAAAADUoPZ9NPofym5yu/7C3tv/v/f7/0Nna/7a+vf+xt7f/vsXG/9Ha
        2//N19f/7/3+/+Tx8v+jqaf/7/3+/+Ht7v+0u7r/rLGx/7G3t/+1vLv/vcXF/+/9/v+wt7b/2ubo/1VL
        iPs1LEPSAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsjHjtWUVGRrLGx/u/9/v/v/f7/7/3+/+/9
        /v/v/f7/5fLz/7vDw/6ipaTpg4WDlHd3d16ZnZzYsLa3/Nrl5f/v/f7/7/3+/+/9/v/v/f7/7/3+/7C3
        tv99f327KSIfSysrFQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ0dHPXt7++8rfA
        v/KttLPnnKGg1pOVlbRzcW96Jx0dGgAAAAAAAAAAAAAAAAAAAAAuFxcLZ2RkXImIi6ebn5/PrLCv4rW7
        u/C3v77yhYWE7ldRSywAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////////////////////////////4//+P8HwAAAB4AAAAeAA
        AAPgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB+AAAAfgAAAH4AAAB/gA
        gB/8D/A/////////////////////////////////
</value>
  </data>
</root>