<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Borrarimagen.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABdNtfwWQ6//FkOv/xZDr/8WQ6//FkOv/xZD
        r/8WQ6//FkOv/xZDr/8WQ6//IFa9/gAAAAAAAAAAAAAAAAAAAAAWSLL/Fkiy/xZIsv8WSLL/Fkiy/xZI
        sv8WSLL/Fkiy/xZIsv8WSLL/G1G5/ytx1P8AAAAAAAAAAAAAAAAAAAAAFU60/xVOtP8VTrT/FU60/xVO
        tP8VTrT/FU60/xVOtP8VTrT/Gla7/yty1P8tdNb/AAAAAAAAAAAAAAAAAAAAABVTt/8VU7f/FVO3/xVT
        t/8VU7f/FVO3/xVTt/8VU7f/Glq9/yty1P8tdNb/TKDp/wAAAAAAAAAAAAAAAAAAAAAXYL//FVi6/xVY
        uv8VWLr/FVi6/xVYuv8VWLr/G17A/yxz1f8tdNb/QZfl/2HE+f8AAAAAAAAAAAAAAAAAAAAAJp/i/xdk
        wf8VXLz/FVy8/xVcvP8VXLz/GmXD/yty1P8tdNb/OJTj/1C99P9YwPb/AAAAAAAAAAAAAAAAAAAAACmt
        6v8mpOT/GGzF/xVhvv8VYb7/GXDH/yeo5v8rleL/Lpfj/zq07v9FufH/Trzz/wAAAAAAAAAAAAAAAAAA
        AAAprer/Ka3q/yeo5/8ad8v/GnfL/yip6P8prer/Ka3q/ymt6v8ur+v/OLPu/0C28P8AAAAAAAAAAAAA
        AAAAAAAAKa3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/6Xg+P/K8P3/Prbs/ymt6v8wsOz/AAAAAAAA
        AAAAAAAAAAAAACmt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v/K8P3/3vj//1K97/8prer/Ka3q/wAA
        AAAAAAAAAAAAAAAAAAAprer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/PbXs/0287v8prer/Ka3q/ymt
        6v8AAAAAAAAAAAAAAAAAAAAAKa3q3imt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8qrerdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAAwAMAAMADAADAAwAAwAMAAMADAADAAwAAwAMAAMAD
        AADAAwAAwAMAAMADAADAAwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHF+/2hZC
        rv8WQa7/FkGu/xZBrv8WQa7/FkGu/xZBrv8WQa7/FkGu/xZBrv8WQa7/FkGu/xZBrv8WQa7/FkGu/xZB
        rv8WQa7/FkGu/xZBrv8WQa7/FkGu/xdBr/8nX8PuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAWRLD/FkSv/xZEr/8WRK//FkSv/xZEr/8WRK//FkSv/xZEr/8WRK//FkSv/xZEr/8WRK//FkSv/xZE
        r/8WRK//FkSv/xZEr/8WRK//FkSv/xZEr/8WRK//GEex/ylrzv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABZHsf8WR7H/Fkex/xZHsf8WR7H/Fkex/xZHsf8WR7H/Fkex/xZHsf8WR7H/Fkex/xZH
        sf8WR7H/Fkex/xZHsf8WR7H/Fkex/xZHsf8WR7H/Fkex/xdJsv8oacz/LXTW/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFkmy/xZJsv8WSbL/Fkmy/xZJsv8WSbL/Fkmy/xZJsv8WSbL/Fkmy/xZJ
        sv8WSbL/Fkmy/xZJsv8WSbL/Fkmy/xZJsv8WSbL/Fkmy/xZJsv8XS7P/KGnN/y101v8tdNb/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVTLT/FUy0/xVMtP8VTLT/FUy0/xVMtP8VTLT/FUy0/xVM
        tP8VTLT/FUy0/xVMtP8VTLT/FUy0/xVMtP8VTLT/FUy0/xVMtP8VTLT/Fk61/ydqzf8tdNb/LXTW/y10
        1v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVPtf8VT7X/FU+1/xVPtf8VT7X/FU+1/xVP
        tf8VT7X/FU+1/xVPtf8VT7X/FU+1/xVPtf8VT7X/FU+1/xVPtf8VT7X/FU+1/xZRtv8na83/LXTW/y10
        1v8tdNb/LXTW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVK2/xVStv8VUrb/FVK2/xVS
        tv8VUrb/FVK2/xVStv8VUrb/FVK2/xVStv8VUrb/FVK2/xVStv8VUrb/FVK2/xVStv8WVLf/J2zO/y10
        1v8tdNb/LXTW/y101v9Ooer/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVVLj/FVS4/xVU
        uP8VVLj/FVS4/xVUuP8VVLj/FVS4/xVUuP8VVLj/FVS4/xVUuP8VVLj/FVS4/xVUuP8VVLj/Fla5/ydr
        zv8tdNb/LXTW/y101v8tdNb/R5nn/2jH+/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVX
        uf8VV7n/FVe5/xVXuf8VV7n/FVe5/xVXuf8VV7n/FVe5/xVXuf8VV7n/FVe5/xVXuf8VV7n/FVe5/xZZ
        uv8nbM7/LXTW/y101v8tdNb/LXTW/0KY5f9hxPn/Zcb6/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHn3O/xVZuv8VWbr/FVm6/xVZuv8VWbr/FVm6/xVZuv8VWbr/FVm6/xVZuv8VWbr/FVm6/xVZ
        uv8XW7z/KG/Q/y101v8tdNb/LXTW/y101v8/luT/WMH2/13C9/9hxPn/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAprOr/HX3P/xVbu/8VW7v/FVu7/xVbu/8VW7v/FVu7/xVbu/8VW7v/FVu7/xVb
        u/8VW7v/Fly8/ydtz/8tdNb/LXTW/y101v8tdNb/O5Ti/1C99P9Uv/X/WMH2/1zC9/8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACmt6v8prer/HoPS/xVdvf8VXb3/FV29/xVdvf8VXb3/FV29/xVd
        vf8VXb3/FV29/xZgv/8lfdX/LXTW/y101v8tdNb/LXTW/zWS4f9FufH/S7vz/1C99P9Uv/X/V8D2/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKa3q/ymt6v8prer/IIvW/xVhvv8VYL7/FWC+/xVg
        vv8VYL7/FWC+/xVgvv8WY8D/JJne/yms6v8rj9//LXXW/y111/8xk+L/OrTu/0C28P9FufH/S7vy/0+9
        9P9SvvT/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAprer/Ka3q/ymt6v8prer/IZDZ/xVj
        wP8VYr//FWK//xViv/8VYr//FmXB/yOZ3v8prer/Ka3q/ymt6v8qpej/Kajo/y6v6/80su3/OrTu/z+2
        8P9EuPH/SLry/0y88/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmt6v8prer/Ka3q/ymt
        6v8prer/IpTc/xZmwf8VZMD/FWTA/xZnwf8jmt//Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/y6v
        6/80se3/ObTu/z217/9Bt/D/Rbnx/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKa3q/ymt
        6v8prer/Ka3q/ymt6v8prer/JJzg/xl0yv8aeMz/JZ7i/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/y2v6/8ysez/NrLt/zq07v89tu//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAprer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/0e6
        7f+76fv/2PX+/5vd9/8tr+r/Ka3q/yuu6v8vr+v/M7Hs/zay7f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACmt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/uej7/974///e+P//3vj//3vP8/8prer/Ka3q/ymt6v8rruv/Lq/r/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKa3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/ymt6v/U8/7/3vj//974///e+P//l9v3/ymt6v8prer/Ka3q/ymt6v8prer/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAprer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/ymt6v8prer/Ka3q/5rc9//e+P//3vj//974//9dwvD/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACmt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Lq/r/3/R9P+c3ff/X8Pw/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKa3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/ymt6v8prer/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAprer9Ka3q/ymt
        6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6vwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACit
        6p4pren5Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt
        6v8prer/Ka3q/ymt6v8prer/Ka3q/ymt6v8pren5Ka3qnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////////////////////wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA//////////////////////
</value>
  </data>
</root>